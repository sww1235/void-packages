Disable optional Pythran support that is hard-required during build.

--- a/setup.py
+++ b/setup.py
@@ -6,7 +6,7 @@
 import shutil
 import builtins
 import textwrap
-from numpy.distutils.command.build_ext import build_ext as npy_build_ext
+from numpy.distutils.command.build_ext import build_ext
 
 import setuptools
 from setuptools.command.build_py import build_py
@@ -17,7 +17,13 @@
     # can remove this except case once we require setuptools>=59.0
     from distutils.errors import CompileError, LinkError
 
-from pythran.dist import PythranBuildExt as pythran_build_ext
+try:
+    from pythran.dist import PythranBuildExt as pythran_build_ext
+except ImportError:
+    pass
+else:
+    # Replace numpy extension builder with pythran version
+    build_ext = pythran_build_ext[build_ext]
 
 DISTNAME = 'scikit-image'
 DESCRIPTION = 'Image processing in Python'
@@ -60,7 +66,7 @@
 
 # Support for openmp
 
-class ConditionalOpenMP(pythran_build_ext[npy_build_ext]):
+class ConditionalOpenMP(build_ext):
 
     def can_compile_link(self, compile_flags, link_flags):
 
--- a/skimage/feature/setup.py
+++ b/skimage/feature/setup.py
@@ -2,7 +2,7 @@
 
 import os
 from skimage._build import cython
-import pythran, logging
+import logging
 
 base_path = os.path.abspath(os.path.dirname(__file__))
 
@@ -43,6 +43,11 @@
     config.add_extension('_sift', sources=['_sift.c'],
                          include_dirs=[get_numpy_include_dirs(), '../_shared'])
 
+    try:
+        import pythran
+    except ImportError:
+        return config
+
     # pythran submodules
     pythran.config.logger.setLevel(logging.INFO)
     ext = pythran.dist.PythranExtension(
